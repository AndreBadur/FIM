generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model address {
  id_address  Int        @id @unique(map: "id_address_UNIQUE") @default(autoincrement())
  street      String?    @db.VarChar(255)
  number      String?    @db.VarChar(255)
  city        String?    @db.VarChar(255)
  state       String?    @db.VarChar(255)
  country     String?    @db.VarChar(255)
  postal_code String?    @db.VarChar(26)
  updated_at  DateTime?  @default(now()) @db.Timestamp(0)
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  company     company[]
  customer    customer[]
  farm        farm[]
}

model area {
  id_area      Int           @id @default(autoincrement())
  id_type_area Int?
  id_farm      Int?
  name         String?       @db.VarChar(45)
  description  String?       @db.VarChar(255)
  features     String?       @db.VarChar(45)
  capacity     Decimal?      @db.Decimal(10, 0)
  status       Boolean?
  created_at   DateTime?     @default(now()) @db.DateTime(0)
  updated_at   DateTime?     @default(now()) @db.DateTime(0)
  area_type    area_type?    @relation(fields: [id_type_area], references: [id_area_type], onDelete: NoAction, onUpdate: NoAction, map: "fk_areatype_area")
  farm         farm?         @relation(fields: [id_farm], references: [id_farm], onDelete: NoAction, onUpdate: NoAction, map: "fk_farm_area")
  building     building[]
  cultivation  cultivation[]

  @@index([id_type_area], map: "fk_areatype_area_idx")
  @@index([id_farm], map: "fk_farm_area_idx")
}

model area_type {
  id_area_type Int                 @id @default(autoincrement())
  name         String?             @db.VarChar(45)
  description  String?             @db.VarChar(255)
  category     area_type_category?
  status       Int?                @db.TinyInt
  area         area[]
}

model building {
  id_building Int            @id @default(autoincrement())
  id_farm     Int?
  id_area     Int?
  name        String?        @db.VarChar(45)
  type        building_type?
  address_id  Int?
  created_at  DateTime?      @default(now()) @db.DateTime(0)
  updated_at  DateTime?      @default(now()) @db.DateTime(0)
  area        area?          @relation(fields: [id_area], references: [id_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_area_building")
  farm        farm?          @relation(fields: [id_farm], references: [id_farm], onDelete: NoAction, onUpdate: NoAction, map: "fk_farm_building")
  item        item[]

  @@index([id_area], map: "fk_area_building_idx")
  @@index([id_farm], map: "fk_farm_facility_idx")
}

model company {
  id_company     Int        @id @default(autoincrement())
  id_address     Int?
  cnpj           String?    @db.VarChar(45)
  corporate_name String?    @db.VarChar(45)
  trade_name     String?    @db.VarChar(45)
  email          String?    @db.VarChar(45)
  telephone      String?    @db.VarChar(45)
  created_at     DateTime?  @default(now()) @db.DateTime(0)
  updated_at     DateTime?  @default(now()) @db.DateTime(0)
  address        address?   @relation(fields: [id_address], references: [id_address], onDelete: NoAction, onUpdate: NoAction, map: "fk_address_company")
  supplier       supplier[]

  @@index([id_address], map: "fk_address_company_idx")
}

model cultivation {
  id_cultivation            Int                 @id @default(autoincrement())
  id_cultivation_type       Int?
  id_area                   Int?
  name                      String?             @db.VarChar(45)
  planting_date             DateTime?           @db.DateTime(0)
  harvest_date              DateTime?           @db.DateTime(0)
  soil_type                 String?             @db.VarChar(45)
  irrigation_type           String?             @db.VarChar(45)
  fertilizer_used           String?             @db.VarChar(45)
  pesticide_used            String?             @db.VarChar(45)
  plant_density             Int?
  irrigation_requirement    Decimal?            @db.Decimal(10, 0)
  climate_zone              String?             @db.VarChar(45)
  growth_stage              String?             @db.VarChar(45)
  yield_estimate            Decimal?            @db.Decimal(10, 0)
  cultivation_rotation_plan String?             @db.VarChar(45)
  harvest_yield             Decimal?            @db.Decimal(10, 0)
  sowing_depth              Decimal?            @db.Decimal(10, 0)
  plant_spacing             Decimal?            @db.Decimal(10, 0)
  status                    cultivation_status?
  created_at                DateTime?           @default(now()) @db.DateTime(0)
  updated_at                DateTime?           @default(now()) @db.DateTime(0)
  area                      area?               @relation(fields: [id_area], references: [id_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_area_cultivation")
  cultivation_type          cultivation_type?   @relation(fields: [id_cultivation_type], references: [id_caltivation_type], onDelete: NoAction, onUpdate: NoAction, map: "fk_cultivationtype_cultivation")

  @@index([id_area], map: "fk_area_cultivation_idx")
  @@index([id_cultivation_type], map: "fk_cultivationtype_cultivation_idx")
}

model cultivation_type {
  id_caltivation_type Int           @id @default(autoincrement())
  name                String?       @db.VarChar(45)
  description         String?       @db.VarChar(255)
  category            String?       @db.VarChar(45)
  status              Int?          @db.TinyInt
  cultivation         cultivation[]
}

model employee {
  id_employee   Int       @id @default(autoincrement())
  id_farm       Int?
  cpf           String?   @db.VarChar(45)
  name          String?   @db.VarChar(255)
  cost_per_hour Decimal?  @db.Decimal(10, 0)
  hours_worked  Decimal?  @db.Decimal(10, 0)
  created_at    DateTime? @default(now()) @db.DateTime(0)
  updated_at    DateTime? @db.DateTime(0)
  id_farmer     Int
  farm          farm?     @relation(fields: [id_farm], references: [id_farm], onDelete: NoAction, onUpdate: NoAction, map: "fk_farm_employee")
  farmer        farmer    @relation(fields: [id_farmer], references: [id_farmer], onDelete: NoAction, onUpdate: NoAction, map: "fk_farmer_employee")
  task          task[]

  @@index([id_farm], map: "fk_farm_employee_idx")
  @@index([id_farmer], map: "fk_farmer_employee")
}

model machinery {
  id_machinery          Int              @id @default(autoincrement())
  id_machinery_type     Int?
  id_farm               Int?
  name                  String?          @db.VarChar(45)
  model                 String?          @db.VarChar(45)
  status                machinery_status @default(active)
  cost_per_hour         Decimal?         @db.Decimal(10, 0)
  maintenance_interval  Int?
  last_maintenance_date DateTime?        @db.DateTime(0)
  created_at            DateTime?        @default(now()) @db.DateTime(0)
  updated_at            DateTime?        @default(now()) @db.DateTime(0)
  farm                  farm?            @relation(fields: [id_farm], references: [id_farm], onDelete: NoAction, onUpdate: NoAction, map: "fk_farm_machinery")
  machinery_type        machinery_type?  @relation(fields: [id_machinery_type], references: [id_machinery_type], onDelete: NoAction, onUpdate: NoAction, map: "fk_machinerytype_machinery")
  rent                  rent[]
  task                  task[]

  @@index([id_machinery_type], map: "fk_machinerytype_machinery_idx")
  @@index([id_farm], map: "fk_farm_machinery_idx")
}

model machinery_type {
  id_machinery_type Int         @id @default(autoincrement())
  name              String?     @db.VarChar(45)
  description       String?     @db.VarChar(45)
  status            Int?        @db.TinyInt
  machinery         machinery[]
}

model farm {
  id_farm          Int                @id @default(autoincrement())
  id_farmer        Int?
  id_address       Int?
  created_at       DateTime?          @default(now()) @db.DateTime(0)
  updated_at       DateTime?          @default(now()) @db.DateTime(0)
  cnpj             String?            @db.VarChar(45)
  corporate_name   String?            @db.VarChar(45)
  area             area[]
  building         building[]
  employee         employee[]
  address          address?           @relation(fields: [id_address], references: [id_address], onDelete: Restrict, onUpdate: Restrict, map: "farm_address_FK")
  farmer           farmer?            @relation(fields: [id_farmer], references: [id_farmer], onDelete: NoAction, onUpdate: NoAction, map: "fk_farmer_farm")
  machinery        machinery[]
  software_license software_license[]
  supplies         supplies[]
  task             task[]

  @@index([id_farmer], map: "fk_farmer_farm_idx")
  @@index([id_address], map: "farm_address_FK")
}

model farmer {
  id_farmer        Int                @id
  created_at       DateTime?          @default(now()) @db.DateTime(0)
  updated_at       DateTime?          @default(now()) @db.DateTime(0)
  employee         employee[]
  farm             farm[]
  software_license software_license[]
}

model item {
  id_item               Int                       @id @default(autoincrement())
  id_building           Int?
  id_item_type          Int?
  quantity              Int?
  harvest_date          DateTime?                 @db.DateTime(0)
  expiration_date       DateTime?                 @db.DateTime(0)
  price_per_unit        Decimal?                  @db.Decimal(10, 0)
  is_avaliable_for_sale Int?                      @db.TinyInt
  availability_status   item_availability_status?
  building              building?                 @relation(fields: [id_building], references: [id_building], onDelete: NoAction, onUpdate: NoAction, map: "fk_building_item")
  item_type             item_type?                @relation(fields: [id_item_type], references: [id_item_type], onDelete: NoAction, onUpdate: NoAction, map: "fk_itemtype_item")

  @@index([id_building], map: "fk_building_item_idx")
  @@index([id_item_type], map: "fk_itemtype_item_idx")
}

model item_type {
  id_item_type Int     @id @default(autoincrement())
  name         String? @db.VarChar(45)
  description  String? @db.VarChar(45)
  category     String? @db.VarChar(45)
  status       Int?    @db.TinyInt
  item         item[]
}

model rent {
  id_rent      Int        @id @default(autoincrement())
  date_payment DateTime?  @db.DateTime(0)
  start_date   DateTime?  @db.DateTime(0)
  end_date     DateTime?  @db.DateTime(0)
  rental_price Decimal?   @db.Decimal(10, 0)
  created_at   DateTime?  @default(now()) @db.DateTime(0)
  updated_at   DateTime?  @default(now()) @db.DateTime(0)
  id_machinery Int?
  machinery    machinery? @relation(fields: [id_machinery], references: [id_machinery], onDelete: NoAction, onUpdate: NoAction, map: "fk_machinery_rent")

  @@index([id_machinery], map: "fk_machinery_rent_idx")
}

model software_license {
  id_software_license Int                      @id @default(autoincrement())
  id_farmer           Int?
  id_farm             Int?
  status              software_license_status?
  farmer_email        String?                  @db.VarChar(255)
  activation_date     DateTime?                @db.DateTime(0)
  expiration_date     DateTime?                @db.DateTime(0)
  accountstatus       Int?                     @db.TinyInt
  created_at          DateTime?                @default(now()) @db.DateTime(0)
  update_at           DateTime?                @default(now()) @db.DateTime(0)
  farm                farm?                    @relation(fields: [id_farm], references: [id_farm], onDelete: NoAction, onUpdate: NoAction, map: "fk_farm_softwarelicense")
  farmer              farmer?                  @relation(fields: [id_farmer], references: [id_farmer], onDelete: NoAction, onUpdate: NoAction, map: "fk_farmer_softwarelicense")

  @@index([id_farm], map: "fk_farm_softwarelicense_idx")
  @@index([id_farmer], map: "fk_farmer_softwarelicense_idx")
}

model supplier {
  id_supplier Int       @id @default(autoincrement())
  id_company  Int?
  created_at  DateTime? @default(now()) @db.DateTime(0)
  updated_at  DateTime? @default(now()) @db.DateTime(0)
  company     company?  @relation(fields: [id_company], references: [id_company], onDelete: NoAction, onUpdate: NoAction, map: "fk_company_supplier")

  @@index([id_company], map: "fk_company_supplier_idx")
}

model task {
  id_task         Int          @id @default(autoincrement())
  id_farm         Int?
  id_employee     Int?
  id_supply       Int?
  supply_quantity Decimal?     @db.Decimal(10, 0)
  conclusion_date DateTime?    @db.DateTime(0)
  status          task_status?
  created_at      DateTime?    @default(now()) @db.DateTime(0)
  updated_at      DateTime?    @default(now()) @db.DateTime(0)
  id_machinery    Int?
  supplyId_supply Int?
  employee        employee?    @relation(fields: [id_employee], references: [id_employee], onDelete: NoAction, onUpdate: NoAction, map: "fk_employee_task")
  farm            farm?        @relation(fields: [id_farm], references: [id_farm], onDelete: NoAction, onUpdate: NoAction, map: "fk_farm_task")
  machinery       machinery?   @relation(fields: [id_machinery], references: [id_machinery], onDelete: NoAction, onUpdate: NoAction, map: "fk_machinery_task")
  supply          supplies?    @relation(fields: [id_supply], references: [supply_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_supply_task")

  @@index([id_employee], map: "fk_employee_task_idx")
  @@index([id_machinery], map: "fk_machinery_task_idx")
  @@index([id_farm], map: "fk_farm_task_idx")
  @@index([id_supply], map: "fk_supply_task_idx")
}

model customer {
  id_customer        Int                     @id @default(autoincrement())
  id_address         Int?
  name               String?                 @db.VarChar(45)
  email              String?                 @db.VarChar(255)
  contact_number     String?                 @db.VarChar(45)
  customer_type      customer_customer_type?
  last_purchase_date DateTime?               @db.DateTime(0)
  is_active          Int?                    @db.TinyInt
  address            address?                @relation(fields: [id_address], references: [id_address], onDelete: NoAction, onUpdate: NoAction, map: "fk_address_costumer")

  @@index([id_address], map: "fk_address_costumer_idx")
}

model supply_categories {
  category_id          Int        @id @default(autoincrement())
  category_name        String     @db.VarChar(45)
  category_description String?    @db.VarChar(255)
  is_active            Boolean?   @default(true)
  created_at           DateTime?  @default(now()) @db.DateTime(0)
  updated_at           DateTime?  @default(now()) @db.DateTime(0)
  supplies             supplies[]
}

model supplies {
  supply_id         Int                @id @default(autoincrement())
  id_farm           Int?
  supply_category   Int?
  supply_quantity   Int?
  supply_cost_price Decimal?           @db.Decimal(10, 0)
  created_at        DateTime?          @default(now()) @db.DateTime(0)
  updated_at        DateTime?          @default(now()) @db.DateTime(0)
  farm              farm?              @relation(fields: [id_farm], references: [id_farm], onDelete: NoAction, onUpdate: NoAction, map: "fk_farm_supply")
  supply_categories supply_categories? @relation(fields: [supply_category], references: [category_id], onDelete: Restrict, onUpdate: Restrict, map: "supplies_supply_categories_FK")
  task              task[]

  @@index([id_farm], map: "fk_farm_supply_idx")
  @@index([supply_category], map: "supplies_supply_categories_FK")
}

enum area_type_category {
  Farm
  Site
}

enum software_license_status {
  free
  test
  premium
}

enum building_type {
  Truck
}

enum machinery_status {
  active
  inactive
  onMaintenance
}

enum task_status {
  to_do     @map("to do")
  doing
  verifying
  cancelled
  done
}

enum item_availability_status {
  available
  on_hold   @map("on hold")
  sold_out  @map("sold out")
}

enum cultivation_status {
  to_plant     @map("to plant")
  germinating
  sprouting
  healthy
  wilted
  ready
  harvest_done @map("harvest done")
}

enum customer_customer_type {
  Buyer
  Reseller
}
